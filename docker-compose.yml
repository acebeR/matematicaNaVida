services:
  frontend:
    build:
      context: ./frontend # Caminho para o Dockerfile do front-end
    container_name: matematicanavida-frontend
    ports:
      - "3000:80"  # Expondo a porta 80 (do Nginx no container) para a 3000 localmente
    depends_on:
      - backend  # O front-end depende do back-end estar pronto antes de rodar
    networks:
      - app_network  # Rede compartilhada entre os serviços
    environment:
      - API_URL=http://backend:5000  # URL para a API do back-end

  backend:
    build:
      context: ./backend  # Caminho para o Dockerfile do back-end
    container_name: matematicanavida-backend
    ports:
      - "5000:5000"  # Expondo a porta 5000 do Flask para a máquina local
    environment:
      - FLASK_APP=main.py  # Arquivo principal do Flask
      - FLASK_ENV=production  # Ambiente de produção
      - DATABASE_URL=postgresql://usuario:senha@meu_postgres:5432/meubanco  # URL de conexão com o banco
    depends_on:
      - meu_postgres  # O back-end depende do banco de dados estar pronto
    networks:
      - app_network  # Rede compartilhada entre os serviços

  meu_postgres:
    image: postgres:13
    container_name: meu_postgres
    environment:
      POSTGRES_DB: meubanco
      POSTGRES_USER: usuario
      POSTGRES_PASSWORD: senha
    volumes:
      - postgres_data:/var/lib/postgresql/data  # Volume para persistência de dados
    ports:
      - "5432:5432"  # Expondo a porta do PostgreSQL para a máquina local
    networks:
      - app_network  # Rede compartilhada entre os serviços

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
